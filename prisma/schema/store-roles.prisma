// Simplified Store Access - extends existing UserTenant model
// Store access is now managed through the existing Role/Permission system
// with store-scoped permissions

// User-Store access mapping (simplified)
model UserStoreAccess {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  // User relationship
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Store relationship  
  storeId String @db.ObjectId
  store   Store  @relation(fields: [storeId], references: [id], onDelete: Cascade)

  // Use existing role system
  roleId String @db.ObjectId
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  // Tenant relationship for data isolation
  tenantId String @db.ObjectId
  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  // Status and metadata
  isActive   Boolean   @default(true)
  assignedBy String?   @db.ObjectId
  assigner   User?     @relation("StoreAccessAssigner", fields: [assignedBy], references: [id], onDelete: SetNull)
  assignedAt DateTime  @default(now())
  revokedAt  DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Ensure one role per user per store
  @@unique([userId, storeId])
  @@map("user_store_access")
}
