model Role {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  role   String   
  active Boolean? @default(true)

  permissions   Permission[] @relation(fields: [permissionIds], references: [id])
  permissionIds String[]     @db.ObjectId
  //userTenants UserTenant[]
  users UserTenant[]

  created_by String? @db.ObjectId
  creator    User?   @relation("RoleCreator", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt()
  deleted_at DateTime?
  tenantId   String   @db.ObjectId
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  storeUsers StoreUser[]
  
  // Store access relationships
  userStoreAccess UserStoreAccess[]
  
  @@unique([tenantId,role])
  @@map("roles")
}

model Permission {
  id      String      @id @default(auto()) @map("_id") @db.ObjectId
  action  ActionEnum // This field likely specifies the type of action that the permission grants or restricts
  subject SubjectEnum // The subject field usually refers to the resource or entity on which the action is performed.

  // Store scope - if null, applies to all stores (tenant-wide permission)
  storeId String? @db.ObjectId
  store   Store?  @relation(fields: [storeId], references: [id], onDelete: Cascade)

  roles   Role[]   @relation(fields: [roleIds], references: [id])
  roleIds String[] @db.ObjectId

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt()
  deleted_at DateTime?

  @@unique([action, subject, storeId]) // Ensure unique permissions per store
  @@map("permissions")
}

enum ActionEnum {
  manage // can manage everything (perform all crud operations)
  read // can only read data
  write // can only write/update data
  delete // can only delete
  create // create new resources
  update // modify existing resources
  
  // Store-specific actions
  transfer // Transfer inventory between stores
  receive // Receive transfers from other stores
  approve // Approve requests/transfers
  reject // Reject requests/transfers
  allocate // Allocate inventory to store
  reserve // Reserve inventory
  adjust // Adjust inventory quantities
  report // Generate reports
  export // Export data
  configure // Configure store settings
  assign // Assign users to stores
}

// Add more possible subjects/models to this enum
enum SubjectEnum {
  all
  User
  Sales
  Agents
  Customers
  Inventory
  Accounts
  Products
  Contracts
  Support
  Communication
  
  // Store-specific subjects
  Store
  StoreConfiguration
  StoreUsers
  StoreInventory
  StoreBatchInventory
  InventoryBatch
  StoreTransfer
  StoreRequest
  Reports
  Analytics
  Settings
  Logs
}
