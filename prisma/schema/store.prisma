model Store {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  type      StoreType
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  tenantId  String    @db.ObjectId
  parentId  String?   @db.ObjectId
  parent    Store?    @relation("ParentStore", fields: [parentId], references: [id], onDelete: Restrict, onUpdate: NoAction)
  children  Store[]   @relation("ParentStore")
  
  // Store status and settings
  isActive  Boolean   @default(true)
  region    String?   // Geographic region identifier

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // User relationships
  users StoreUser[]
  
  // Multi-store inventory relationships
  storeInventories    StoreInventory[]
  rootSourceInventories StoreInventory[] @relation("RootSource")
  configuration       StoreConfiguration?
  
  // Transfer relationships
  transfersFrom       StoreTransfer[] @relation("TransferFrom")
  transfersTo         StoreTransfer[] @relation("TransferTo")
  
  // Request relationships
  requestsFrom        StoreRequest[] @relation("RequestFrom")
  requestsTo          StoreRequest[] @relation("RequestTo")
  
  // Batch-aware inventory relationships
  storeBatchInventories     StoreBatchInventory[]
  batchRootSourceInventories StoreBatchInventory[] @relation("BatchRootSource")
  
  // Batch transfer relationships
  batchTransfersFrom        StoreBatchTransfer[] @relation("BatchTransferFrom")
  batchTransfersTo          StoreBatchTransfer[] @relation("BatchTransferTo")
  
  // Batch request relationships
  batchRequestsFrom         StoreBatchRequest[] @relation("BatchRequestFrom")
  batchRequestsTo           StoreBatchRequest[] @relation("BatchRequestTo")
  
  // Store role relationships
  storeRoles                StoreRole[]
  storePermissions          StorePermission[]
  userStoreRoles            UserStoreRole[]

  @@map("stores")
}

enum StoreType {
  MAIN
  REGIONAL
  SUB_REGIONAL
}

// Join Table: Store and User
model StoreUser {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  store       Store    @relation(fields: [storeId], references: [id])
  storeId     String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  role        Role     @relation(fields: [roleId], references: [id])
  roleId      String   @db.ObjectId

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

