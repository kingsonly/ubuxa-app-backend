model Store {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  type      StoreType
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  tenantId  String    @db.ObjectId
  parentId  String?   @db.ObjectId
  parent    Store?    @relation("ParentStore", fields: [parentId], references: [id], onDelete: Restrict, onUpdate: NoAction)
  children  Store[]   @relation("ParentStore")

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // StoreUser Information
  users StoreUser[]

  @@map("stores")
}

enum StoreType {
  MAIN
  REGIONAL
  SUB_REGIONAL
}

// Join Table: Store and User
model StoreUser {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  store       Store    @relation(fields: [storeId], references: [id])
  storeId     String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  role        Role     @relation(fields: [roleId], references: [id])
  roleId      String   @db.ObjectId

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

